Object.defineProperty(exports,"__esModule",{value:true});var _extends2=require('babel-runtime/helpers/extends');var _extends3=_interopRequireDefault(_extends2);var _objectWithoutProperties2=require('babel-runtime/helpers/objectWithoutProperties');var _objectWithoutProperties3=_interopRequireDefault(_objectWithoutProperties2);var _getPrototypeOf=require('babel-runtime/core-js/object/get-prototype-of');var _getPrototypeOf2=_interopRequireDefault(_getPrototypeOf);var _classCallCheck2=require('babel-runtime/helpers/classCallCheck');var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require('babel-runtime/helpers/createClass');var _createClass3=_interopRequireDefault(_createClass2);var _possibleConstructorReturn2=require('babel-runtime/helpers/possibleConstructorReturn');var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require('babel-runtime/helpers/inherits');var _inherits3=_interopRequireDefault(_inherits2);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);
var _react=require('react');var _react2=_interopRequireDefault(_react);
var _reactNative=require('react-native');
var _Styles=require('./Styles');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var


Button=function(_React$Component){(0,_inherits3.default)(Button,_React$Component);function Button(){(0,_classCallCheck3.default)(this,Button);return(0,_possibleConstructorReturn3.default)(this,(Button.__proto__||(0,_getPrototypeOf2.default)(Button)).apply(this,arguments));}(0,_createClass3.default)(Button,[{key:'render',value:function render()
{
var touchableProps={
background:this._computeFeedbackBackground()};var _ref=


this.props.style||{},color=_ref.color,rest=(0,_objectWithoutProperties3.default)(_ref,['color']);

if(this.props.disabled){
color=_Styles.defaultStyles.disabled.color;
rest.backgroundColor=_Styles.defaultStyles.disabled.backgroundColor;
rest.borderColor=_Styles.defaultStyles.disabled.borderColor;
}


if(!this.props.disabled){
touchableProps.onPress=this.props.onPress;
}

color=color||_Styles.defaultStyles.text.color;

return(
_react2.default.createElement(_reactNative.TouchableNativeFeedback,
touchableProps,

_react2.default.createElement(_reactNative.View,{style:(0,_extends3.default)({},_Styles.defaultStyles.button,rest)},
_react2.default.createElement(_reactNative.Text,{style:{color:color}},
this.props.title.toUpperCase()))));




}},{key:'_computeFeedbackBackground',value:function _computeFeedbackBackground()

{
if(this.props.disabled){
return null;
}

return _reactNative.TouchableNativeFeedback.SelectableBackground();
}}]);return Button;}(_react2.default.Component);exports.default=


Button;

Button.propTypes={
title:_propTypes2.default.string.isRequired,
onPress:_propTypes2.default.func.isRequired,
disabled:_propTypes2.default.bool};