Object.defineProperty(exports,"__esModule",{value:true});var _getPrototypeOf=require('babel-runtime/core-js/object/get-prototype-of');var _getPrototypeOf2=_interopRequireDefault(_getPrototypeOf);var _classCallCheck2=require('babel-runtime/helpers/classCallCheck');var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require('babel-runtime/helpers/createClass');var _createClass3=_interopRequireDefault(_createClass2);var _possibleConstructorReturn2=require('babel-runtime/helpers/possibleConstructorReturn');var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require('babel-runtime/helpers/inherits');var _inherits3=_interopRequireDefault(_inherits2);var _react=require('react');var _react2=_interopRequireDefault(_react);
var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);
var _reactNative=require('react-native');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

var styles={
container:{
width:200},

autoCompleteInput:{
width:200,
height:40},

listContainer:{
zIndex:1,
position:'absolute',
marginTop:40,
backgroundColor:'#FFF',
width:'inherit'},

listItem:{
height:40,
justifyContent:'center',
borderWidth:2,
borderStyle:'solid',
borderColor:'#e0e0e0',
borderTopWidth:0}};var



AutoComplete=function(_React$Component){(0,_inherits3.default)(AutoComplete,_React$Component);
function AutoComplete(props){(0,_classCallCheck3.default)(this,AutoComplete);var _this=(0,_possibleConstructorReturn3.default)(this,(AutoComplete.__proto__||(0,_getPrototypeOf2.default)(AutoComplete)).call(this,
props));_initialiseProps.call(_this);

var ds=new _reactNative.ListView.DataSource({rowHasChanged:function rowHasChanged(r1,r2){return r1!==r2;}});
_this.state={
allData:props.list,
dataSource:ds.cloneWithRows([]),
query:'',
showList:false};return _this;

}(0,_createClass3.default)(AutoComplete,[{key:'render',value:function render()

{var _this2=this;
return(
_react2.default.createElement(_reactNative.View,{style:styles.container},
_react2.default.createElement(_reactNative.TextInput,{style:styles.autoCompleteInput,
placeholder:this.props.placeholder,
value:this.state.query,
onBlur:function onBlur(){return _this2.setState({showList:false});},
onChangeText:this.onQueryChange}),
this.state.showList&&

_react2.default.createElement(_reactNative.View,{style:styles.listContainer},
_react2.default.createElement(_reactNative.ListView,{
enableEmptySections:true,
dataSource:this.state.dataSource,
renderRow:
function renderRow(rowData){return(
_react2.default.createElement(_reactNative.TouchableOpacity,{
style:styles.listItem,
onPress:
function onPress(){
_this2.setState({
showList:false,query:rowData},
function(){
if(_this2.props.onItemSelected)
_this2.props.onItemSelected(_this2.state.query);
});
}},
_react2.default.createElement(_reactNative.Text,{style:{marginLeft:10}},
rowData)));}}))));









}}]);return AutoComplete;}(_react2.default.Component);var _initialiseProps=function _initialiseProps(){var _this3=this;this.

onQueryChange=function(value){
_this3.setState({query:value});
_this3.filter(value);
};this.

filter=function(query){
query=query.trim();
var filteredData=_this3.state.allData.filter(function(item){
if(_this3.props.ignoreCase)
return item.toLowerCase().includes(query.toLowerCase());

return item.includes(query);
});

var ds=new _reactNative.ListView.DataSource({rowHasChanged:function rowHasChanged(r1,r2){return r1!==r2;}});
_this3.setState({
dataSource:ds.cloneWithRows(filteredData),
showList:true});


};};exports.default=AutoComplete;


AutoComplete.defaultProps={
ignoreCase:false};


AutoComplete.propTypes={
placeholder:_propTypes2.default.string,
list:_propTypes2.default.array.isRequired,
ignoreCase:_propTypes2.default.bool,
onItemSelected:_propTypes2.default.func};